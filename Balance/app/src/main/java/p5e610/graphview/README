 _____                 _          _                 
|  __ \               | |        (_)              _ 
| |  \/_ __ __ _ _ __ | |____   ___  _____      _(_)
| | __| '__/ _` | '_ \| '_ \ \ / / |/ _ \ \ /\ / /  
| |_\ \ | | (_| | |_) | | | \ V /| |  __/\ V  V / _ 
 \____/_|  \__,_| .__/|_| |_|\_/ |_|\___| \_/\_/ (_)
                | |                                 
                |_|                                                                                                                                                                        
 _   _                 _          _   _             
| | | |               | |        | | | |            
| |_| | _____      __ | |_ ___   | | | |___  ___    
|  _  |/ _ \ \ /\ / / | __/ _ \  | | | / __|/ _ \   
| | | | (_) \ V  V /  | || (_) | | |_| \__ \  __/   
\_| |_/\___/ \_/\_/    \__\___/   \___/|___/\___|   
                                                    
                                                    

In order to use graph view, you have to create a list of objects with a type
that extends DataPointInterface.  The simplest one is DataPoint. Afterwards,
construct a GraphView with this java code in the MainActivity:

	GraphView graph = (GraphView) findViewById(R.id.graph);

And this xml in content_main.xml (adjust height etc. as necessary):

    <p5e610.graphview.GraphView
        android:layout_width="match_parent"
        android:layout_height="300dip"
        android:id="@+id/graph" />

To add your data to the graph, use the following lines:
        Series<DataPoint> series = new LineGraphSeries<>(dpList);
        graph.addSeries(series);

Here is a method that randomly generates test data:
_______________________________________________________________________________

    private DataPoint[] randomDpList(int numItems, double start, double end) {
        DataPoint[] ls = new DataPoint[numItems];
        double recX = 0;
        double recY = 0;
        double variation = (end-start)*.05;

        for (int i = 0; i < numItems; i++) {
            double newX = Math.random()*variation - variation*.5 + recX;
            double newY = Math.random()*variation - variation*.5 + recY;

            recX = newX;
            recY = newY;
            ls[i] = new DataPoint(newX, newY);
        }

        return ls;
    }
_______________________________________________________________________________

